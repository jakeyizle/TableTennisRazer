// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TableTennisRazer.Models;

namespace TableTennisRazer.Migrations
{
    [DbContext(typeof(TableTennisRazerContext))]
    [Migration("20181028011607_MatchSeparation4")]
    partial class MatchSeparation4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TableTennisRazer.Models.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("LosingPersonOne");

                    b.Property<int>("LosingScore");

                    b.Property<string>("WinningPersonOne");

                    b.Property<int>("WinningScore");

                    b.HasKey("MatchId");

                    b.ToTable("Match");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Match");
                });

            modelBuilder.Entity("TableTennisRazer.Models.Person", b =>
                {
                    b.Property<string>("PersonName")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MatchId");

                    b.Property<double>("Mean");

                    b.Property<double>("StandardDeviation");

                    b.HasKey("PersonName");

                    b.HasIndex("MatchId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("TableTennisRazer.Models.FourPersonMatch", b =>
                {
                    b.HasBaseType("TableTennisRazer.Models.Match");


                    b.ToTable("FourPersonMatch");

                    b.HasDiscriminator().HasValue("FourPersonMatch");
                });

            modelBuilder.Entity("TableTennisRazer.Models.TwoPersonMatch", b =>
                {
                    b.HasBaseType("TableTennisRazer.Models.Match");


                    b.ToTable("TwoPersonMatch");

                    b.HasDiscriminator().HasValue("TwoPersonMatch");
                });

            modelBuilder.Entity("TableTennisRazer.Models.Person", b =>
                {
                    b.HasOne("TableTennisRazer.Models.Match")
                        .WithMany("People")
                        .HasForeignKey("MatchId");
                });
#pragma warning restore 612, 618
        }
    }
}
